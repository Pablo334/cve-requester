#!/usr/bin/env python3

import argparse
import json
import requests

def query(endpoint):
    response = requests.get(endpoint)
    
    try:
        response = requests.get(endpoint)
        return response.json()
    except Exception as e:
        return {"error": str(e)}

def present_data(raw_data):
    print("---------------------------------------------------------------------------------------------------------------------------------------")
    print("---------------------------------------------------------------------------------------------------------------------------------------")
    print("ID: {}".format(raw_data["cve"]["CVE_data_meta"]["ID"]))
    print("---------------------------------------------------------------------------------------------------------------------------------------")
    print("Description: {}".format(raw_data["cve"]["description"]["description_data"][0]["value"]))
    print("---------------------------------------------------------------------------------------------------------------------------------------")
    print("Published Date: {}".format(raw_data["publishedDate"]))
    print("---------------------------------------------------------------------------------------------------------------------------------------")
    print("Last Modified Date: {}".format(raw_data["lastModifiedDate"]))
    print("---------------------------------------------------------------------------------------------------------------------------------------")
    print("CVSS V3 Metrics")
    print("---------------------------------------------------------------------------------------------------------------------------------------")
    print("Attack Vector: {}".format(raw_data["impact"]["baseMetricV3"]["cvssV3"]["attackVector"]))
    print("---------------------------------------------------------------------------------------------------------------------------------------")
    print("Attack Complexity: {}".format(raw_data["impact"]["baseMetricV3"]["cvssV3"]["attackComplexity"]))
    print("---------------------------------------------------------------------------------------------------------------------------------------")
    print("Privileges Required: {}".format(raw_data["impact"]["baseMetricV3"]["cvssV3"]["privilegesRequired"]))
    print("---------------------------------------------------------------------------------------------------------------------------------------")
    print("User Interaction: {}".format(raw_data["impact"]["baseMetricV3"]["cvssV3"]["userInteraction"]))
    print("---------------------------------------------------------------------------------------------------------------------------------------")
    print("Scope: {}".format(raw_data["impact"]["baseMetricV3"]["cvssV3"]["scope"]))
    print("---------------------------------------------------------------------------------------------------------------------------------------")
    print("Confidentiality Impact: {}".format(raw_data["impact"]["baseMetricV3"]["cvssV3"]["confidentialityImpact"]))
    print("---------------------------------------------------------------------------------------------------------------------------------------")
    print("Integrity Impact: {}".format(raw_data["impact"]["baseMetricV3"]["cvssV3"]["integrityImpact"]))
    print("---------------------------------------------------------------------------------------------------------------------------------------")
    print("Availability Impact: {}".format(raw_data["impact"]["baseMetricV3"]["cvssV3"]["availabilityImpact"]))
    print("---------------------------------------------------------------------------------------------------------------------------------------")
    print("Base Score: {}".format(raw_data["impact"]["baseMetricV3"]["cvssV3"]["baseScore"]))
    print("---------------------------------------------------------------------------------------------------------------------------------------")
    print("Base Severity: {}".format(raw_data["impact"]["baseMetricV3"]["cvssV3"]["baseSeverity"]))
    print("---------------------------------------------------------------------------------------------------------------------------------------")
    print("Exploitability Score: {}".format(raw_data["impact"]["baseMetricV3"]["exploitabilityScore"]))
    print("---------------------------------------------------------------------------------------------------------------------------------------")
    print("Impact Score: {}".format(raw_data["impact"]["baseMetricV3"]["impactScore"]))
    print("---------------------------------------------------------------------------------------------------------------------------------------")
    print("---------------------------------------------------------------------------------------------------------------------------------------")

def main():
    parser = argparse.ArgumentParser(description="Query for vulnerability details by CVE number")
    parser.add_argument("-c", "--cve", help="CVE id in format CVE-yyyy-nnnn", required=True)

    args = parser.parse_args()

    base_url = "https://v1.cveapi.com"
    cve = args.cve

    details = query("{}/{}.json".format(base_url, cve.upper(    )))
    if not "error" in details.keys():
        present_data(details)
    else:
        print(details["error"])



if __name__ == "__main__":
    main()